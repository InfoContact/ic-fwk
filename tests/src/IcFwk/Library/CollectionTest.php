<?php

namespace InfoContact\IcFwk\Library;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-25 at 17:03:03.
 */
class CollectionTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Collection
     */
    protected $object;
    /**
     * @var Collection
     */
    protected $other;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Collection([
            "key1" => 10,
            "key2" => 15,
            "key3" => [
                "subkey1" => "subvalue1",
                "subkey2" => "subvalue2"
            ]
        ]);
        $this->other = new Collection([
            "john" => ["name" => "rambo", "mark" => 19],
            "bruce" => ["name" => "willis", "mark" => 12],
            "chuck" => ["name" => "norris", "mark" => 13]
        ]);
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::get
     */
    public function testGet() {
        $this->assertEquals(10, $this->object->get("key1"));
        $this->assertEquals(15, $this->object->get("key2"));
        $this->assertEquals(new Collection(["subkey1" => "subvalue1","subkey2" => "subvalue2"]), $this->object->get("key3"));
        $this->assertEquals("subvalue2", $this->object->get("key3.subkey2"));
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::set
     */
    public function testSet() {
        $this->assertEquals(null, $this->object->get("key4"));
        $this->object->set("key4", 19);
        $this->assertEquals(19, $this->object->get("key4"));
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::has
     */
    public function testHas() {
        $this->object->set("key4", 19);
        $this->assertEquals(true, $this->object->has("key4"));
        $this->assertEquals(false, $this->object->has("key5"));
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::lists
     */
    public function testLists() {
        $result = new Collection([
            "rambo" => 19,
            "willis" => 12,
            "norris" => 13
        ]);
        $this->assertEquals($result, $this->other->lists("name", "mark"));
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::extract
     * @todo   Implement testExtract().
     */
    public function testExtract() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::join
     * @todo   Implement testJoin().
     */
    public function testJoin() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::max
     * @todo   Implement testMax().
     */
    public function testMax() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::offsetExists
     * @todo   Implement testOffsetExists().
     */
    public function testOffsetExists() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::offsetGet
     * @todo   Implement testOffsetGet().
     */
    public function testOffsetGet() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::offsetSet
     * @todo   Implement testOffsetSet().
     */
    public function testOffsetSet() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::offsetUnset
     * @todo   Implement testOffsetUnset().
     */
    public function testOffsetUnset() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers InfoContact\IcFwk\Library\Collection::getIterator
     * @todo   Implement testGetIterator().
     */
    public function testGetIterator() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
